URL: https://cis.unimelb.edu.au/research/computer-science/research/programming-languages-and-formal-methods

Programming Languages and Formal Verification

Programming Languages and Formal Verification

Programming Languages and Formal Verification

About UsWe work on designing and implementing programming language and formal verification tools and techniques that enable the development of high-assurance trustworthy software.

Staff Given name Family namePositionProfileEmailAaron BembenekResearch FellowProfileaaron.bembenek@unimelb.edu.auToby MurrayAssociate ProfessorProfiletoby.murray@unimelb.edu.auChristine RizkallahLecturerProfilechristine.rizkallah@unimelb.edu.auPeter SchachteLecturerProfileschachte@unimelb.edu.au

Graduate ResearchersGiven name Family nameProfile Thesis TitleZhuoChenProfileA Verified Cost Model for Call-By-Push-Value Lambda CalculusLouisCheungProfileFormally Verified Data Compression AlgorithmsVincentJacksonProfileMechanised High-level Verification for Concurrent Low-level ProgramsPilar Selene LinaresArevaloProfileComposing Linear Types and Separation Logic Proofs of Memory SafetyMak Nazecic-AndrlonProfileEfficient interval reasoning for floating-point arithmeticPengboYanProfileProving Obliviousness with Formal Verification

ProjectsAutomated Rely-Guarantee GenerationThe Cogent ProjectThe COVERN ProjectThe CATCH ProjectThe Dargent ProjectThe Wybe Project

Weekly ActivitiesProgramming Languages and Verification Reading Group


